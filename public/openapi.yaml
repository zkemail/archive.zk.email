openapi: 3.1.0
info:
  title: DKIM Archive API
  description: |-
    This is the API specification for the DKIM Archive API, which follows the OpenAPI 3.0.3 specification.
  version: '0.1'
  license:
    name: MIT
    url: https://opensource.org/license/MIT
servers:
  - url: https://archive.prove.email/api
  - url: /api
    description: Development
paths:
  /key:
    get:
      tags:
        - dkim-key
      summary: List DKIM keys
      description: >
        Returns a list of DKIM keys for a given domain and its subdomains.
        The endpoint is rate limited to 1000 requests per second.
      operationId: listKeys
      parameters:
        - name: domain
          in: query
          description: Match the domain name and any subdomains.
          required: true
          schema:
            type: string
          example: 'example.com'
      responses:
        '400':
          description: Missing parameter
        '429':
          description: Rate limit exceeded
        '500':
          description: Unexpected error
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DkimKey'
  /key/domain:
    get:
      tags:
        - dkim-key
      summary: List DKIM keys for exact domain match
      description: >
        Returns a list of DKIM keys for an exact domain match (no subdomains).
        Optionally filter by a specific selector.
        Uses in-memory caching for improved performance.
        The endpoint is rate limited to 2000 requests per second.
      operationId: listDomainKeys
      parameters:
        - name: domain
          in: query
          description: Exact domain name to match (no subdomain matching).
          required: true
          schema:
            type: string
          example: 'example.com'
        - name: selector
          in: query
          description: Optional selector to filter results by a specific DKIM selector.
          required: false
          schema:
            type: string
      responses:
        '400':
          description: Missing domain parameter
          content:
            application/json:
              schema:
                type: string
                example: "missing domain parameter"
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                type: string
                example: "Rate limit exceeded"
        '500':
          description: Unexpected error
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DkimKey'
  /dsp:
    post:
      tags:
        - domain-selector-pair
      summary: Add a domain/selector pair
      description: >
        Add a domain/selector pair.
        The server will try to fetch the DKIM key for the given domain and selector.
        If the key is found, the domain/selector pair will be added to the archive along with the key.
        The response indicates whether the domain/selector pair and the key were added to the archive, via the `added` field.
        The endpoint is rate limited to 1200 requests per 10 minutes.
      operationId: addDsp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainSelectorPair'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - added
                  - message
                properties:
                  added:
                    type: boolean
                    description: Whether the domain/selector pair was added to the archive
                  message:
                    $ref: '#/components/schemas/DomainSelectorPair'

        '400':
          description: Invalid input
        '500':
          description: Unexpected error
  /jwk_set:
    get:
      tags:
        - jwk
      summary: Get JSON Web Key Set records
      description: >
        Returns all stored JSON Web Key Set (JWKS) records including their x509 certificates and verification status.
        The endpoint is rate limited to 100 requests per second.
      operationId: getJwkSet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JwkSetRecord'
        '429':
          description: Rate limit exceeded
        '500':
          description: Unexpected error
components:
  schemas:
    DkimKey:
      type: object
      required:
        - value
        - domain
        - selector
      properties:
        value:
          type: string
          examples:
            - k=rsa; t=s; p=MIGfMA0GCSqGSIb3D...
        domain:
          type: string
          examples:
            - example.com
        selector:
          type: string
          examples:
            - dkimkey
        firstSeenAt:
          type: string
          format: date-time
          examples:
            - 2021-01-01T00:00:00Z
        lastSeenAt:
          type: string
          format: date-time
          examples:
            - 2021-01-01T00:00:00Z
    DomainSelectorPair:
      type: object
      required:
        - domain
        - selector
      properties:
        domain:
          type: string
          examples:
            - example.com
        selector:
          type: string
          examples:
            - s1
    JwkSetRecord:
      type: object
      required:
        - jwks
        - x509Certificate
        - provenanceVerified
      properties:
        jwks:
          type: object
          description: JSON Web Key Set
          properties:
            keys:
              type: array
              items:
                type: object
                properties:
                  kty:
                    type: string
                    example: "RSA"
                  use:
                    type: string
                    example: "sig"
                  kid:
                    type: string
                    example: "2023-01-01"
                  alg:
                    type: string
                    example: "RS256"
                  n:
                    type: string
                    example: "modulus_value"
                  e:
                    type: string
                    example: "AQAB"
        x509Certificate:
          type: string
          description: PEM formatted x509 certificate
          example: |
            -----BEGIN CERTIFICATE-----
            MIIE...
            -----END CERTIFICATE-----
        provenanceVerified:
          type: boolean
          description: Whether the provenance of the keys has been verified
          example: false